[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "clientcontributionfl"
version = "1.0.0"
description = "A Flower-based Federated Learning project using FedAvg and SecAgg+ protocol"
authors = [
    {name = "Gabriele Lerani", email = "gabriele.lerani2000@gmail.com"},
]
dependencies = [
    "flwr[simulation]>=1.11.0",
    "flwr-datasets[vision]>=0.3.0",
    "torch==2.4.1",
    "torchmetrics",
    "torchvision==0.19.1",
    "matplotlib==3.9.2"
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "gabriele"

[tool.flwr.app.components]
serverapp = "clientcontributionfl.server_app:app"
clientapp = "clientcontributionfl.client_app:app"

[tool.flwr.app.config]
num_rounds = 30
fraction_fit = 1.0
fraction_evaluate = 0.3
num_clients_per_round_fit = 2
num_clients_per_round_eval = 2
save_path = "clientcontributionfl/plots"
strategy = "ZkAvg"
top_k = 2


# dataset config
dataset_name = "ylecun/mnist"
distribution = "iid_and_non_iid"
plot_label_distribution = true
num_classes_per_partition = 5 # only for pathological distribution
alpha = 0.5
batch_size = 10

# dataset config for non_iid nodes
iid_ratio = 0.5 # percentge of iid_node
x_non_iid = 2 # number of labels of non_iid clients

# secaggplus config
secaggplus = false
num_shares = 3
reconstruction_threshold = 2
max_weight = 9000

# train config
gamma = 0.0
device = "cpu"
num_epochs = 1
lr = 0.1

# zk proof params
scale = 1000 # used to scale floating value into fixed integers in zokrates
beta = 1 # the importance to give variance
thr = 500 # the threshold to evaluate contribution

[tool.flwr.federations]
default = "local-simulation"

[tool.flwr.federations.local-simulation]
backend="ray"
options.num-supernodes = 5
options.backend.client-resources.num-cpus = 6 # each ClientApp assumes to use 6CPUs
options.backend.client-resources.num-gpus = 0.0 # ratio of VRAM a ClientApp has access to
